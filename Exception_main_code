package com.exception;

import java.io.IOException;
import java.io.Serializable;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.faces.bean.ManagedBean;
import javax.faces.context.FacesContext;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.myfaces.trinidad.render.ExtendedRenderKitService;
import org.apache.myfaces.trinidad.util.Service;

import com.damco.mdm.ui.bean.Organisation;
import com.damco.mdm.ui.managedbeans.HeaderBean;
import com.sif.connection.JDBCConnectionFactory;
import com.siperian.common.util.StringUtil;
import com.validation.client.authorization.concern.LoginBean;

@SuppressWarnings("serial")
@ManagedBean(name = "NewExceptions")
//@ManagedBean(name = "CMDCustExceptions")
public class NewExceptions implements Serializable {


	//private LoginBean loginBean;
	private static transient Logger logger = Logger.getLogger(NewExceptions.class);
	Organisation organisation2 = new Organisation();
	
	Organisation org2 = new Organisation();
	private List<Organisation> org1 = new ArrayList<Organisation>();
	//CMDCustExceptions cmdCustExceptions ;
	NewExceptions newExceptions ;
	public LoginBean loginBean;
	
	public String searchNewExceptions() {
	try {
		long startTime = System.currentTimeMillis();
		logger.info("startTime" + startTime);
		logger.info("-------------->inside searchCMDCustException");//cmdcustexceptions
		
		
		loginBean = (LoginBean) FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("loginBean");
		
		
		if (StringUtil.isEmpty(organisation2.getScvNumber().getCode())) {
			String script = "alert('Please Enter SCV Code')";
			FacesContext context = FacesContext.getCurrentInstance();
			ExtendedRenderKitService extService = Service.getRenderKitService(context,ExtendedRenderKitService.class);
			extService.addScript(context, script);
			return "";
			
		}
		
	String bECode = organisation2.getScvNumber().getCode().toString();
		logger.info("SCV code" + bECode);
		
	Connection mdmConnection = JDBCConnectionFactory.getConnection();
	PreparedStatement str =null;
	ResultSet rs=null;
	PreparedStatement str1 =null;
	//PreparedStatement st31 =null;
	ResultSet rs1=null;
	//ResultSet rs31=null;
	//PreparedStatement str2 =null;
	//ResultSet rs2=null;
	//String maxSeq = null;
	
	/*try {
		st31 = mdmConnection.prepareStatement("select max(pk_seq_num) SEQU from customer_cmd_interface where SCV_Code= ?");
		st31.setString(1, bECode);
		rs31 = st31.executeQuery();
		
		if(rs31.next())
		{
	    maxSeq = rs31.getString("SEQU");
		}
	}
	catch (Exception e) {
		logger.error("Custom UI Exception:" + e, e);
	} finally {
		try {
			if (rs31 != null)
				rs31.close();
			if (st31 != null)
				st31.close();
			
		} catch (Exception e) {

			logger.error("Custom UI Exception:" + e, e);
		}

	}
	*/
	
	try {
		//str = mdmConnection.prepareStatement("select Trading_Name,Be_Code,SCV_Code, Fact_Code, Validation_Error,MDM_VALIDATION_ERROR,Processed_Status,processed_date,reprocessed_reason from customer_cmd_interface where SCV_Code= ? and pk_seq_num='"+ maxSeq +"'");
		//str = mdmConnection.prepareStatement("select b.Trading_Name,b.Be_Code,b.Fact_Code,a.SCV_Code,CONCAT(MDM_VALIDATION_ERROR,'|',Reprocessed_Reason) as 'MDM_VALIDATION_ERROR',b.VALIDATION_ERROR,b.Processed_Status,b.processed_date from customer_cmd_interface b,(select customer_cmd_interface.SCV_Code,MAX(PK_SEQ_NUM) as PK_SEQ_NUM from customer_cmd_interface where customer_cmd_interface.SCV_Code = ? group by scv_code )a where a.SCV_Code=b.SCV_Code and a.PK_SEQ_NUM=b.PK_SEQ_NUM order by scv_code");
		str = mdmConnection.prepareStatement("select b.Trading_Name,b.Be_Code,b.Fact_Code,a.SCV_Code,\r\n" + 
				"b.VALIDATION_ERROR,b.Processed_Status,b.processed_date,\r\n" + 
				"iif(CONCAT(b.MDM_VALIDATION_ERROR,'|',b.Reprocessed_Reason)='|', NULL, CONCAT(b.MDM_VALIDATION_ERROR,'|',b.Reprocessed_Reason)) as 'MDM_VALIDATION_ERROR'\r\n" + 
				"from customer_cmd_interface b,\r\n" + 
				"(select customer_cmd_interface.SCV_Code,MAX(PK_SEQ_NUM) as PK_SEQ_NUM from customer_cmd_interface\r\n" + 
				"where customer_cmd_interface.SCV_Code = ?\r\n" + 
				"group by scv_code )a where a.SCV_Code=b.SCV_Code and a.PK_SEQ_NUM=b.PK_SEQ_NUM ORDER BY SCV_Code");
		str.setString(1, bECode);		
		rs = str.executeQuery();
				
		if(rs.next())
				{
			org2.setTradename(rs.getString("Trading_Name"));
			org2.setBeCode1(rs.getString("Be_Code"));
			org2.setScvCode1(rs.getString("SCV_Code"));
			org2.setFactCode1(rs.getString("Fact_Code"));
			org2.setValidationerror(rs.getString("Validation_Error"));
			org2.setMdmvalidationerror(rs.getString("MDM_VALIDATION_ERROR"));
			org2.setProcessedstatus(rs.getString("Processed_Status"));
			org2.setProcesseddate(rs.getString("processed_date"));
			//org2.setReprocessedreason(rs.getString("reprocessed_reason"));
			org1.add(org2);
			
			logger.info("resultset" +rs);
			logger.info("stored result" +org2);
			        
			   
				}
		
	/*	else {	
			str2 = mdmConnection.prepareStatement("select PARTY_RL_NM,MODS_BE_CODE,SCV_CODE,FACT_CODE,LAST_UPDATE_DATE where SCV_Code= ?");
			str2.setString(1, bECode);
			rs2 = str2.executeQuery();
			
			if(rs2.next())
			{
		org2.setTradename(rs2.getString("PARTY_RL_NM"));
		org2.setBeCode1(rs2.getString("MODS_BE_CODE"));
		org2.setScvCode1(rs2.getString("SCV_CODE"));
		org2.setFactCode1(rs2.getString("FACT_CODE"));
		org2.setValidationerror("NA");
		org2.setMdmvalidationerror("NA");
		org2.setProcessedstatus("NA");
		org2.setProcesseddate(rs2.getString("LAST_UPDATE_DATE"));
		//org2.setReprocessedreason(rs.getString("reprocessed_reason"));
		org1.add(org2);
		
		logger.info("resultset" +rs2);
		logger.info("stored result" +org2);
		        
		   
			}
		   
		} */
		
	}
	
	catch (Exception e) {
		logger.error("Customer UI exception" +e, e);
	}
	finally {
		if (str!=null ) {
			try {
				str.close();
			}
			catch (SQLException e) {
				e.printStackTrace();
			}
		}
	
	if(rs!=null) {
		try {
			rs.close();
		} catch (SQLException e) {
			
			e.printStackTrace();
		}}
	
	}
 // esb_msg_log 
	//if (rs.getString("SCV_Code").isEmpty()) {
		
	//}
	try {
		str1 = mdmConnection.prepareStatement("select d.MQ_MSG_STATUS,d.INSERT_DATE from PKG_CUST_MINIMAL_SRCH a,\r\n" + 
				"(select max(event_id) as 'latest_Event_id',EVENT_HD_KEY from ESB_EVENT_LOG group by EVENT_HD_KEY) c,\r\n" + 
				"ESB_MSG_LOG d where a.PTR_ROWID=c.EVENT_HD_KEY and c.latest_Event_id=d.EVENT_ID and\r\n" + 
				"a.SCV_CODE= ?");
		str1.setString(1, bECode);		
		rs1 = str1.executeQuery();
				
		if(rs1.next())
				{
			org2.setMdmmsgstatus(rs1.getString("MQ_MSG_STATUS"));
			org2.setMdmoutbounddate(rs1.getString("INSERT_DATE"));
			org1.add(org2);
			
			logger.info("resultset" +rs1);
			logger.info("stored result" +org2);
			        
			    
				      
				}
		
	} 
	
	catch (Exception e) {
		logger.error("Customer UI exception" +e, e);
	}
	
	finally {
		if (str1!=null ) {
			try {
				str1.close();
			}
			catch (SQLException e) {
				e.printStackTrace();
			}
		}
	
	if(rs1!=null) {
		try {
			rs1.close();
		} catch (SQLException e) {
			
			e.printStackTrace();
		}}
	
	//end
	
	try {
		mdmConnection.close();
	} catch (SQLException e) {
		
		e.printStackTrace();
	}	

	}
	
	
	}

	catch (Exception e) {
		e.printStackTrace();
	}
//	organisation2 = new Organisation();//added 13Jan
//	headerBean = new HeaderBean(); //added 13Jan
	return "";
	
	
	}
	
// For reDirect the page
	public void clearSession(String key) {
		FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove(key);

	}
private HeaderBean headerBean;

public String reDirect(){
	
	
	headerBean = new HeaderBean();
	organisation2 = new Organisation();
	
	
	//HttpSession session1 = (HttpSession) FacesContext.getCurrentInstance().getExternalContext().getSession(false);
	HttpSession session = (HttpSession) FacesContext.getCurrentInstance().getExternalContext().getSession(true);
	String updated="not";
	if (session.getAttribute("Tabs")!=null){
	updated= session.getAttribute("Tabs").toString();}
	if(updated.equals("deptUpdated")){
		//System.out.println("Inside search 1 if condition" );
		session.setAttribute("toPage", "reDirect");
		return "dialog:openAlart";
	}else{
		if ((HeaderBean) FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("headerBean") == null) {
			headerBean = new HeaderBean();
			FacesContext.getCurrentInstance().getExternalContext()
					.getSessionMap().put("headerBean", headerBean);
		} else {
			headerBean = (HeaderBean) FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("headerBean");
		}
		logger.info("headerBean.isShowLocSearch()::"
				+ headerBean.isShowLocSearch());
		
		headerBean.setShowCustSearch(false);

		headerBean.setShowDeptSearch(false);
		headerBean.setShowLocSearch(false);
		headerBean.setShowPersonSearch(false);
		headerBean.setShowExceptionSearch(true);
		
		clearSession("customer");
		clearSession("concernBean");
		clearSession("departmentBean");
		clearSession("relationshipBean");
		clearSession("locationBean");
		clearSession("personBean");
		clearSession("taskStatus");
		clearSession("TaskAction");
		clearSession("auditTrailBean");
		clearSession("reportCall");
		clearSession("cmdcustexceptions");
		clearSession("NewExceptions");
		
		session.setAttribute("showApprovalPendingAlert", "");
		session.setAttribute("internallySave", "");
		session.setAttribute("Tabs", "");
		session.setAttribute("toPage", "");
		session.setAttribute("addressChanged","");
		session.setAttribute("TaskSuspended","");
		session.setAttribute("returnScenario","");
		return "returnExceptionHeader";
	}
    //return "";

	
}
	


public Organisation getOrganisation2() {
	return organisation2;
}

public void setOrganisation2(Organisation organisation2) {
	this.organisation2 = organisation2;
}

public List<Organisation> getorg1() {
	return org1;
}

public void setorg(List<Organisation> org1) {
	this.org1 = org1;
}

public Organisation getorg2() {
	return org2;
}
// REset
public String resetCMD() {
	
	organisation2 = new Organisation();
	org2 = new Organisation();
	//temp_List_data = new ArrayList<Organisation>();
	//org4 = new Organisation();
	
	//FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("cmdcustexceptions", cmdCustExceptions);
	FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("NewExceptions", newExceptions);

	//HttpSession session = (HttpSession) FacesContext.getCurrentInstance().getExternalContext().getSession(false);
	//this.setDisableRetrigger(true);
	
	try {
		FacesContext.getCurrentInstance().getExternalContext().redirect("../jsp/customerExceptions.jsp");
	} catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}

	return "";
}

}

